apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

apply plugin: 'maven'


android {
    compileSdkVersion compileSdk
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.mistreckless.support.wellcomeapp"
        minSdkVersion minSdk
        targetSdkVersion compileSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        javaCompileOptions {

            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
//    packagingOptions{
//        exclude 'plugin.xml'
//    }
    packagingOptions {
        pickFirst 'META-INF/main.kotlin_module'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultPublishConfig "debug"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation project(':platform-android')
    implementation project(':common-core')
    implementation project(':android-core')
    implementation project(':share')
    implementation project(':event')
    implementation project(':profile')
    implementation project(':main')

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "android.arch.lifecycle:extensions:1.1.1"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"


    implementation "com.arello-mobile:moxy:$moxyVersion"
    implementation "com.arello-mobile:moxy-app-compat:$moxyVersion"
    kapt "com.arello-mobile:moxy-compiler:$moxyVersion"

    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseAuthVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.firebase:firebase-storage:$firebaseStorageVersion"
    implementation "com.google.firebase:firebase-firestore:$firebaseFirestoreVersion"

    implementation 'ru.terrakok.cicerone:cicerone:3.0.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesCoreVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesCoreVersion"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
}

apply plugin: 'com.google.gms.google-services'
kotlin {
    experimental {
        coroutines "enable"
    }
}